<<<<<<< HEAD
<style>
    #subMenuContainer {
        position: fixed;
        top: 52px;
        background-color: red;
        left: 0;
        width: 100%;
    }

    .sub-menu {
        position: relative;
        height: auto;
    }

    #zoneMenuBtn {
        position: absolute;
        backdrop-filter: blur(5px);
        box-shadow: inset 0 0 10px #fff, 0 4px 8px rgba(0, 0, 0, 0.6);
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
        color: #fff;
        left: 50%;
        transform: translate(-50%, -10px);
        padding: 8px;
        cursor: pointer;
    }

    #subMenu {
        position: absolute;
        color: #fff;
        left: 0;

    }

    #zoneMenu {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
        width: 100%;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        padding-left: 0;

        /* margin-left: -100px; */
    }

    .zone-slider {
        position: absolute;
        top: 0;
        left: 0;
        width: 100vw;
        max-width: 100vw;
        background-color: rgba(255, 105, 180, 0.473);
    }

    #zoneMenuLeft {
        position: absolute;
        width: 15px;
        left: 0;
        top: 50%;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
        box-shadow: 4px 0 8px rgba(0, 0, 0, 0.6);

    }

    #zoneMenuRight {
        width: 15px;
        position: absolute;
        right: 0;
        top: 50%;
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
        box-shadow: -4px 0 8px rgba(0, 0, 0, 0.6);


    }

    .zone-button {
        height: 30px;
        background-color: rgba(135, 206, 250, 0.25);
        backdrop-filter: blur(5px);
        font-size: 1.5em;
        color: #fff;
        text-align: center;
        padding: 4px;
        transform: translateY(-4px);
        z-index: 99999;
    }

    #pageMenu {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        padding-left: 10px;
    }

    .zone-item {
        padding: 5px;
        font-size: 1.2rem;
        background-color: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(5px);
        text-align: center;
        border-top: solid 1px #fff;
        border-bottom: solid 1px #fff;
    }

    .zone-item p {
        min-width: fit-content;
    }
    .zone-item a {
        color: #fff;
        text-decoration: none;
    }
    .zone-item:last-of-type {
        border-right: solid 1px #fff;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
        position: relative;
    }

    .zone-item:last-of-type::after {
        position: absolute;
        right: -4px;
        top: 50%;
        transform: translateY(-50%);
        content: '';
        width: 3px;
        height: calc(100% - 2px);
        background-color: rgba(255, 68, 0, 0.5);
        backdrop-filter: blur(5px);
        box-shadow: 0 0 4px orangered;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .hidden {
        display: none;
    }

    .no-menu-open {
        bottom: -32px;
        background-color: rgba(135, 206, 250, 0.25);
    }

    .sub-menu-open {
        bottom: -71px;
        background-color: rgba(135, 206, 250, 0.75);
    }
</style>


<div id="subMenuContainer">
    <div class="sub-menu">
        <div id="zoneMenuBtn" class="no-menu-open">
            <p>Zone Menu</p>
        </div>
        <div id="subMenu" class="hidden">
            <div id="zoneMenu">
                <div class="zone-slider">
                    <div id="zoneMenuLeft" class="zone-button"><</div>
                    <div id="zoneMenuRight" class="zone-button">></div>
                </div>

    <% subZones.forEach(function(subZone) { %>
        
        <div class="zone-item">
            <p><a href="<%=zone.route %><%= subZone.route %>"><%= subZone.name %></a></p>
        </div>
        <% }) %>



                </div>

            </div>
        </div>

    </div>

    <script>
        const zoneMenuBtn = document.getElementById('zoneMenuBtn')
        const pageMenuBtn = document.getElementById('pageMenuBtn')
        const subMenu = document.getElementById('subMenu')
        const zoneMenu = document.getElementById('zoneMenu')
        const zoneMenuLeft = document.getElementById('zoneMenuLeft')
        const zoneMenuRight = document.getElementById('zoneMenuRight')
        const zoneItems = document.querySelectorAll('.zone-item')

        // const minZoneWidth = parseInt(window.screenWidth / zoneItems.length)
        const pageWidth = document.body.clientWidth
        console.log('pageWidth: ', pageWidth)
        const totalZoneLength = zoneItems.length
        console.log('totalZoneLength: ', totalZoneLength)

        const eachZoneLength = (pageWidth / totalZoneLength) - 10
        console.log('eachZoneLength: ', eachZoneLength)

        const minZonesForScroll = (eachZoneLength / pageWidth) > 100
        console.log('minZonesForScroll: ', minZonesForScroll)

        zoneItems.forEach(zoneItem => {
            if (eachZoneLength > 100) {
                zoneItem.style.maxWidth = '250px'
                zoneItem.style.width = eachZoneLength + 'px'
            } else {
                const zoneItemP = zoneItem.querySelector('p')
                zoneItemP.style.minWidth = 'fit-content'
                console.log('zoneItemP', zoneItemP.clentWidth)
                zoneItem.querySelector('p').style.minWidth = 110 + 'px'

            }

        })


        zoneItems.forEach((zone, index) => {
            console.log(zone.querySelector('p').scrollWidth)
            const zoneWidth = zone.scrollWidth
            zone.addEventListener('click', e => {
                console.log(zone)
            })
        })




        zoneMenuBtn.addEventListener('click', e => {
            zoneItems.forEach((zone, index) => {
                console.log(zone.querySelector('p').offsetWidth)
                console.log(getComputedStyle(zone.querySelector('p')).minWidth)
                const zoneWidth = zone.scrollWidth
                zone.addEventListener('click', e => {
                    console.log(zone)
                })
            })

            subMenu.classList.toggle('hidden')
            zoneMenuBtn.classList.toggle('sub-menu-open')
            zoneMenu.classList.toggle('open')
            const totalWidth = zoneMenu.scrollWidth
            const visibleX = zoneMenu.clientWidth
            let currentXPosition = zoneMenu.offsetLeft
            let totalScreenWidth = screenWidth
            console.log(totalScreenWidth)
            if (totalWidth < totalScreenWidth) {
                zoneMenuLeft.classList.add('hidden')
                zoneMenuRight.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
                zoneMenuRight.classList.remove('hidden')

            }

            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
                console.log('dont show left arrow button')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }
        })




        zoneMenuLeft.addEventListener('click', e => {
            console.log('clientWidth', zoneMenu.clientWidth)
            console.log('offsetWidth', zoneMenu.offsetWidth)
            console.log('scrollWidth', zoneMenu.scrollWidth)
            const checkInt = zoneMenu.offsetLeft * 3
            console.log(checkInt)
            console.log('clientLeft', zoneMenu.offsetLeft)
            console.log(window.screenLeft)
            console.log(screenWidth)

            const zoneMenuWidth = zoneMenu.scrollWidth
            const currentZoneMenuPosition = zoneMenu.offsetLeft

            const menuLength = zoneItems.length * 110
            const singleScrollDistance = screenWidth / zoneItems.length
            let currentPosition = zoneMenu.offsetLeft
            let newPosition = currentPosition + singleScrollDistance
            let styledPosition = newPosition + 'px'
            zoneMenu.style.marginLeft = styledPosition
            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }

            const menuXShown = zoneMenu.offsetLeft - screenWidth
            const menuLeft = menuLength + menuXShown

            if (menuLeft <= 0) {
                zoneMenuRight.classList.add('hidden')
            } else {
                zoneMenuRight.classList.remove('hidden')
            }

        })
        zoneMenuRight.addEventListener('click', e => {
            const checkInt = zoneMenu.offsetLeft * 3
            const zoneMenuWidth = zoneMenu.scrollWidth
            const currentZoneMenuPosition = zoneMenu.offsetLeft

            const menuLength = zoneItems.length * 110
            const singleScrollDistance = screenWidth / zoneItems.length
            let currentPosition = zoneMenu.offsetLeft
            let newPosition = currentPosition - singleScrollDistance
            let styledPosition = newPosition + 'px'
            zoneMenu.style.marginLeft = styledPosition
            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }

            const menuXShown = zoneMenu.offsetLeft - screenWidth
            const menuLeft = menuLength + menuXShown

            if (menuLeft <= 0) {
                zoneMenuRight.classList.add('hidden')
            }



        })

=======
<style>
    #subMenuContainer {
        position: fixed;
        top: 52px;
        background-color: red;
        left: 0;
        width: 100%;
    }

    .sub-menu {
        position: relative;
        height: auto;
    }

    #zoneMenuBtn {
        position: absolute;
        backdrop-filter: blur(5px);
        box-shadow: inset 0 0 10px #fff, 0 4px 8px rgba(0, 0, 0, 0.6);
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
        color: #fff;
        left: 50%;
        transform: translate(-50%, -10px);
        padding: 8px;
        cursor: pointer;
    }

    #subMenu {
        position: absolute;
        color: #fff;
        left: 0;

    }

    #zoneMenu {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
        width: 100%;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        padding-left: 0;

        /* margin-left: -100px; */
    }

    .zone-slider {
        position: absolute;
        top: 0;
        left: 0;
        width: 100vw;
        max-width: 100vw;
        background-color: rgba(255, 105, 180, 0.473);
    }

    #zoneMenuLeft {
        position: absolute;
        width: 15px;
        left: 0;
        top: 50%;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
        box-shadow: 4px 0 8px rgba(0, 0, 0, 0.6);

    }

    #zoneMenuRight {
        width: 15px;
        position: absolute;
        right: 0;
        top: 50%;
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
        box-shadow: -4px 0 8px rgba(0, 0, 0, 0.6);


    }

    .zone-button {
        height: 30px;
        background-color: rgba(135, 206, 250, 0.25);
        backdrop-filter: blur(5px);
        font-size: 1.5em;
        color: #fff;
        text-align: center;
        padding: 4px;
        transform: translateY(-4px);
        z-index: 99999;
    }

    #pageMenu {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        padding-left: 10px;
    }

    .zone-item {
        padding: 5px;
        font-size: 1.2rem;
        background-color: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(5px);
        text-align: center;
        border-top: solid 1px #fff;
        border-bottom: solid 1px #fff;
    }

    .zone-item p {
        min-width: fit-content;
    }
    .zone-item a {
        color: #fff;
        text-decoration: none;
    }
    .zone-item:last-of-type {
        border-right: solid 1px #fff;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
        position: relative;
    }

    .zone-item:last-of-type::after {
        position: absolute;
        right: -4px;
        top: 50%;
        transform: translateY(-50%);
        content: '';
        width: 3px;
        height: calc(100% - 2px);
        background-color: rgba(255, 68, 0, 0.5);
        backdrop-filter: blur(5px);
        box-shadow: 0 0 4px orangered;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .hidden {
        display: none;
    }

    .no-menu-open {
        bottom: -32px;
        background-color: rgba(135, 206, 250, 0.25);
    }

    .sub-menu-open {
        bottom: -71px;
        background-color: rgba(135, 206, 250, 0.75);
    }
</style>


<div id="subMenuContainer">
    <div class="sub-menu">
        <div id="zoneMenuBtn" class="no-menu-open">
            <p>Zone Menu</p>
        </div>
        <div id="subMenu" class="hidden">
            <div id="zoneMenu">
                <div class="zone-slider">
                    <div id="zoneMenuLeft" class="zone-button"><</div>
                    <div id="zoneMenuRight" class="zone-button">></div>
                </div>

    <% subZones.forEach(function(subZone) { %>
        
        <div class="zone-item">
            <p><a href="<%=zone.route %><%= subZone.route %>"><%= subZone.name %></a></p>
        </div>
        <% }) %>



                </div>

            </div>
        </div>

    </div>

    <script>
        const zoneMenuBtn = document.getElementById('zoneMenuBtn')
        const pageMenuBtn = document.getElementById('pageMenuBtn')
        const subMenu = document.getElementById('subMenu')
        const zoneMenu = document.getElementById('zoneMenu')
        const zoneMenuLeft = document.getElementById('zoneMenuLeft')
        const zoneMenuRight = document.getElementById('zoneMenuRight')
        const zoneItems = document.querySelectorAll('.zone-item')

        // const minZoneWidth = parseInt(window.screenWidth / zoneItems.length)
        const pageWidth = document.body.clientWidth
        console.log('pageWidth: ', pageWidth)
        const totalZoneLength = zoneItems.length
        console.log('totalZoneLength: ', totalZoneLength)

        const eachZoneLength = (pageWidth / totalZoneLength) - 10
        console.log('eachZoneLength: ', eachZoneLength)

        const minZonesForScroll = (eachZoneLength / pageWidth) > 100
        console.log('minZonesForScroll: ', minZonesForScroll)

        zoneItems.forEach(zoneItem => {
            if (eachZoneLength > 100) {
                zoneItem.style.maxWidth = '250px'
                zoneItem.style.width = eachZoneLength + 'px'
            } else {
                const zoneItemP = zoneItem.querySelector('p')
                zoneItemP.style.minWidth = 'fit-content'
                console.log('zoneItemP', zoneItemP.clentWidth)
                zoneItem.querySelector('p').style.minWidth = 110 + 'px'

            }

        })


        zoneItems.forEach((zone, index) => {
            console.log(zone.querySelector('p').scrollWidth)
            const zoneWidth = zone.scrollWidth
            zone.addEventListener('click', e => {
                console.log(zone)
            })
        })




        zoneMenuBtn.addEventListener('click', e => {
            zoneItems.forEach((zone, index) => {
                console.log(zone.querySelector('p').offsetWidth)
                console.log(getComputedStyle(zone.querySelector('p')).minWidth)
                const zoneWidth = zone.scrollWidth
                zone.addEventListener('click', e => {
                    console.log(zone)
                })
            })

            subMenu.classList.toggle('hidden')
            zoneMenuBtn.classList.toggle('sub-menu-open')
            zoneMenu.classList.toggle('open')
            const totalWidth = zoneMenu.scrollWidth
            const visibleX = zoneMenu.clientWidth
            let currentXPosition = zoneMenu.offsetLeft
            let totalScreenWidth = screenWidth
            console.log(totalScreenWidth)
            if (totalWidth < totalScreenWidth) {
                zoneMenuLeft.classList.add('hidden')
                zoneMenuRight.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
                zoneMenuRight.classList.remove('hidden')

            }

            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
                console.log('dont show left arrow button')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }
        })




        zoneMenuLeft.addEventListener('click', e => {
            console.log('clientWidth', zoneMenu.clientWidth)
            console.log('offsetWidth', zoneMenu.offsetWidth)
            console.log('scrollWidth', zoneMenu.scrollWidth)
            const checkInt = zoneMenu.offsetLeft * 3
            console.log(checkInt)
            console.log('clientLeft', zoneMenu.offsetLeft)
            console.log(window.screenLeft)
            console.log(screenWidth)

            const zoneMenuWidth = zoneMenu.scrollWidth
            const currentZoneMenuPosition = zoneMenu.offsetLeft

            const menuLength = zoneItems.length * 110
            const singleScrollDistance = screenWidth / zoneItems.length
            let currentPosition = zoneMenu.offsetLeft
            let newPosition = currentPosition + singleScrollDistance
            let styledPosition = newPosition + 'px'
            zoneMenu.style.marginLeft = styledPosition
            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }

            const menuXShown = zoneMenu.offsetLeft - screenWidth
            const menuLeft = menuLength + menuXShown

            if (menuLeft <= 0) {
                zoneMenuRight.classList.add('hidden')
            } else {
                zoneMenuRight.classList.remove('hidden')
            }

        })
        zoneMenuRight.addEventListener('click', e => {
            const checkInt = zoneMenu.offsetLeft * 3
            const zoneMenuWidth = zoneMenu.scrollWidth
            const currentZoneMenuPosition = zoneMenu.offsetLeft

            const menuLength = zoneItems.length * 110
            const singleScrollDistance = screenWidth / zoneItems.length
            let currentPosition = zoneMenu.offsetLeft
            let newPosition = currentPosition - singleScrollDistance
            let styledPosition = newPosition + 'px'
            zoneMenu.style.marginLeft = styledPosition
            if (zoneMenu.offsetLeft === 0) {
                zoneMenuLeft.classList.add('hidden')
            } else {
                zoneMenuLeft.classList.remove('hidden')
            }

            const menuXShown = zoneMenu.offsetLeft - screenWidth
            const menuLeft = menuLength + menuXShown

            if (menuLeft <= 0) {
                zoneMenuRight.classList.add('hidden')
            }



        })

>>>>>>> a8a8b4650a974eeda356f271e4e38c9b4cab5fa3
    </script>