<<<<<<< HEAD
<style>
    
    #assistantCoreContainer {
        position: absolute;
        top: 52px;
        right: 0;
        padding: 8px;
        overflow: hidden;
    }
    #assistantCore {
        position: relative;
        padding: 4px;
        width: 50px;
        height: 50px;

    }
    #assistantCoreButton {
        position: absolute;
        top: -20px;
        width: 60px;
        right: -20px;
        z-index: -2;
        height: 60px;
        border-radius: 50%;
        background-color: lightskyblue;
        display: flex;
        align-items: center;
        justify-content: center;
        padding-left: 4px;
        color: #fff;
        box-shadow: 0 0 8px rgba(255, 255, 255, 0.75);
        font-size: 1.3rem;
    }
</style>

<div id="assistantCoreContainer">
    <div id="assistantCore">
        <div id="assistantCoreButton"><i class="fas fa-microphone"></i></div>
    </div>
</div>

<script>

    window.onload = () => {
    const assistantCore = document.getElementById('assistantCore')
    const assistantCoreContainer = document.getElementById('assistantCoreContainer')
    const synth = window.speechSynthesis

    const voiceSelect = document.querySelector('#voiceSelect')
    const selectedAssistant = document.querySelector('#selectedAssistant')
    const speakTextBtn = document.querySelector('#speakTextBtn')
    const pauseSpeech = document.querySelector('#pauseSpeech')
    // const assistantChoices = selectedAssistant.querySelectorAll('input')

    let voices = []

    const getVoices = () => {
        voices = synth.getVoices()
        console.table(voices)
    }

    getVoices()
    if (synth.onvoiceschanged !== undefined) {
        synth.onvoiceschanged = getVoices
    }
    const instructions = () => {
        const speakInstructions = new SpeechSynthesisUtterance('Welcome! Click on a name below to preview their voice.')
        speakInstructions.onend = e => {
            console.log('Waiting for user to click an option...')
        }
        speakInstructions.onerror = e => {
            console.error('Oops, something went wrong!', error)
        }

        speakInstructions.rate = 1.1
        speakInstructions.pitch = 1.7
        synth.speak(speakInstructions)
    }


    assistantCoreContainer.addEventListener('click', e => {
        speak('1')
    })



    const speak = (assistantSelected) => {
        const voiceChoices = [
            {
                name: 'Young Cora',
                rate: 1.1,
                pitch: 1.6,
                voice: 'Microsoft Ana Online (Natural) - English (United States)',
                testing_text: "Hi, I'm Cora. Did you finish your homework? You have gymnastics in 30 minutes."
            },
            {
                name: 'Cora',
                rate: 1.1,
                pitch: 1.7,
                voice: 'Microsoft Jenny Online (Natural) - English (United States)',
                testing_text: "What can I help you with?"
            },
            {
                name: 'Young Corey',
                rate: 1.4,
                pitch: 2,
                voice: 'Microsoft Sam Online (Natural) - English (Hongkong)',
                testing_text: "Hi, I'm Corey. Did you finish your homework? You have football practice in 1 hour"
            },
            {
                name: 'Corey',
                rate: 1,
                pitch: 0.6,
                voice: 'Microsoft Ryan Online (Natural) - English (United Kingdom)',
                testing_text: "Hi, I'm Corey. What can I help you with? Dress warm today, it's going to be cold and windy outside."
            },

        ]

        const usersAssistant = parseInt(assistantSelected)

        const selectedVoice = voiceChoices[usersAssistant].voice

        const speakText = new SpeechSynthesisUtterance(voiceChoices[usersAssistant].testing_text)
        speakText.onend = e => {
            console.log('Wait for user to reply or run a function on the app...')
        }
        speakText.onerror = e => {
            console.error('Oops, something went wrong!', error)
        }

        voices.forEach(voice => {
            if (voice.name === selectedVoice) {
                speakText.voice = voice
            }
        })

        speakText.rate = voiceChoices[usersAssistant].rate
        speakText.pitch = voiceChoices[usersAssistant].pitch
        const text = voiceChoices[usersAssistant].testing_text
        synth.speak(speakText)
    }
    }

=======
<style>
    
    #assistantCoreContainer {
        position: absolute;
        top: 52px;
        right: 0;
        padding: 8px;
        overflow: hidden;
    }
    #assistantCore {
        position: relative;
        padding: 4px;
        width: 50px;
        height: 50px;

    }
    #assistantCoreButton {
        position: absolute;
        top: -20px;
        width: 60px;
        right: -20px;
        z-index: -2;
        height: 60px;
        border-radius: 50%;
        background-color: lightskyblue;
        display: flex;
        align-items: center;
        justify-content: center;
        padding-left: 4px;
        color: #fff;
        box-shadow: 0 0 8px rgba(255, 255, 255, 0.75);
        font-size: 1.3rem;
    }
</style>

<div id="assistantCoreContainer">
    <div id="assistantCore">
        <div id="assistantCoreButton"><i class="fas fa-microphone"></i></div>
    </div>
</div>

<script>

    window.onload = () => {
    const assistantCore = document.getElementById('assistantCore')
    const assistantCoreContainer = document.getElementById('assistantCoreContainer')
    const synth = window.speechSynthesis

    const voiceSelect = document.querySelector('#voiceSelect')
    const selectedAssistant = document.querySelector('#selectedAssistant')
    const speakTextBtn = document.querySelector('#speakTextBtn')
    const pauseSpeech = document.querySelector('#pauseSpeech')
    // const assistantChoices = selectedAssistant.querySelectorAll('input')

    let voices = []

    const getVoices = () => {
        voices = synth.getVoices()
        console.table(voices)
    }

    getVoices()
    if (synth.onvoiceschanged !== undefined) {
        synth.onvoiceschanged = getVoices
    }
    const instructions = () => {
        const speakInstructions = new SpeechSynthesisUtterance('Welcome! Click on a name below to preview their voice.')
        speakInstructions.onend = e => {
            console.log('Waiting for user to click an option...')
        }
        speakInstructions.onerror = e => {
            console.error('Oops, something went wrong!', error)
        }

        speakInstructions.rate = 1.1
        speakInstructions.pitch = 1.7
        synth.speak(speakInstructions)
    }


    assistantCoreContainer.addEventListener('click', e => {
        speak('1')
    })



    const speak = (assistantSelected) => {
        const voiceChoices = [
            {
                name: 'Young Cora',
                rate: 1.1,
                pitch: 1.6,
                voice: 'Microsoft Ana Online (Natural) - English (United States)',
                testing_text: "Hi, I'm Cora. Did you finish your homework? You have gymnastics in 30 minutes."
            },
            {
                name: 'Cora',
                rate: 1.1,
                pitch: 1.7,
                voice: 'Microsoft Jenny Online (Natural) - English (United States)',
                testing_text: "What can I help you with?"
            },
            {
                name: 'Young Corey',
                rate: 1.4,
                pitch: 2,
                voice: 'Microsoft Sam Online (Natural) - English (Hongkong)',
                testing_text: "Hi, I'm Corey. Did you finish your homework? You have football practice in 1 hour"
            },
            {
                name: 'Corey',
                rate: 1,
                pitch: 0.6,
                voice: 'Microsoft Ryan Online (Natural) - English (United Kingdom)',
                testing_text: "Hi, I'm Corey. What can I help you with? Dress warm today, it's going to be cold and windy outside."
            },

        ]

        const usersAssistant = parseInt(assistantSelected)

        const selectedVoice = voiceChoices[usersAssistant].voice

        const speakText = new SpeechSynthesisUtterance(voiceChoices[usersAssistant].testing_text)
        speakText.onend = e => {
            console.log('Wait for user to reply or run a function on the app...')
        }
        speakText.onerror = e => {
            console.error('Oops, something went wrong!', error)
        }

        voices.forEach(voice => {
            if (voice.name === selectedVoice) {
                speakText.voice = voice
            }
        })

        speakText.rate = voiceChoices[usersAssistant].rate
        speakText.pitch = voiceChoices[usersAssistant].pitch
        const text = voiceChoices[usersAssistant].testing_text
        synth.speak(speakText)
    }
    }

>>>>>>> a8a8b4650a974eeda356f271e4e38c9b4cab5fa3
</script>